name: Update Submodules

on:
  schedule:
    # Run weekly on Mondays at 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  discover-submodules:
    runs-on: ubuntu-latest
    outputs:
      submodules: ${{ steps.detect-submodules.outputs.submodules }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Detect submodules
        id: detect-submodules
        run: ./.github/scripts/detect-submodules.sh

  check-submodules:
    runs-on: ubuntu-latest
    needs: discover-submodules
    if: ${{ fromJson(needs.discover-submodules.outputs.submodules) != '[]' }}
    permissions:
      contents: write
      pull-requests: write
    
    strategy:
      matrix:
        submodule: ${{ fromJson(needs.discover-submodules.outputs.submodules) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Check for submodule updates
        id: check-updates
        run: ./.github/scripts/check-submodule-updates.sh "${{ matrix.submodule.path }}"
      
      - name: Create update branch
        if: steps.check-updates.outputs.update_needed == 'true'
        run: ./.github/scripts/update-submodule.sh "${{ matrix.submodule.path }}" "${{ matrix.submodule.name }}" "${{ steps.check-updates.outputs.latest_commit }}" "${{ steps.check-updates.outputs.short_current }}" "${{ steps.check-updates.outputs.short_latest }}"
      
      - name: Create Pull Request
        if: steps.check-updates.outputs.update_needed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the changes file if it exists
            let changesContent = '';
            try {
              changesContent = fs.readFileSync('submodule-changes.md', 'utf8');
            } catch (error) {
              changesContent = 'No detailed changes available.';
            }
            
            // Build the PR body as a string to avoid YAML multiline issues
            const prBody = [
              '## ðŸ”„ Automated Submodule Update',
              '',
              'This PR updates the **${{ matrix.submodule.name }}** submodule to the latest version.',
              '',
              '### Update Details',
              '- **Submodule Path**: `${{ matrix.submodule.path }}`',
              '- **From**: `${{ steps.check-updates.outputs.short_current }}`',
              '- **To**: `${{ steps.check-updates.outputs.short_latest }}`',
              '- **Branch**: `${{ steps.check-updates.outputs.default_branch }}`',
              '',
              '### Description',
              '${{ matrix.submodule.description }}',
              '',
              changesContent,
              '',
              '---',
              '',
              'ðŸ¤– This PR was automatically created by the submodule update workflow.',
              'Please review the changes and merge if appropriate.'
            ].join('\n');
            
            const { data: pullRequest } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Update ${{ matrix.submodule.name }} submodule',
              head: process.env.branch_name,
              base: 'main',
              body: prBody,
              draft: false
            });
            
            console.log('Created PR #' + pullRequest.number + ': ' + pullRequest.html_url);
            
            // Add labels to categorise the PR
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pullRequest.number,
              labels: ['dependencies', 'submodule', 'automated']
            });

  cleanup:
    runs-on: ubuntu-latest
    needs: check-submodules
    if: always()
    steps:
      - name: Summary
        run: |
          echo "Submodule update check completed."
          echo "Check the individual job results for details on any updates."