name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    
    steps:
      - name: Run Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          # Use personal access token for better permissions
          token: ${{ secrets.GITHUB_TOKEN }}
          # Configuration files
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  # Build and upload artifacts when a release is created
  upload-artifacts:
    name: Upload Release Artifacts
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.releases_created == 'true'
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Android environment
        uses: ./.github/actions/setup-android
        
      - name: Extract version from tag
        id: version
        run: |
          TAG="${{ needs.release-please.outputs.tag_name }}"
          VERSION_NAME="${TAG#v}"
          VERSION_CODE=${{ github.run_number }}
          
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION_NAME (code: $VERSION_CODE)"
        
      - name: Build release APK and AAB
        run: |
          ./gradlew assembleRelease bundleRelease \
            -PversionName=${{ steps.version.outputs.version_name }} \
            -PversionCode=${{ steps.version.outputs.version_code }} \
            --parallel --build-cache --configuration-cache
        
      - name: Sign artifacts
        run: |
          echo "Using debug keystore for release signing (development only)"
          ls -la app/build/outputs/apk/release/
          ls -la app/build/outputs/bundle/release/
        
      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Upload APK
          gh release upload ${{ needs.release-please.outputs.tag_name }} \
            app/build/outputs/apk/release/app-release.apk
            
          # Upload AAB
          gh release upload ${{ needs.release-please.outputs.tag_name }} \
            app/build/outputs/bundle/release/app-release.aab
            
          echo "âœ… Artifacts uploaded to release ${{ needs.release-please.outputs.tag_name }}"